{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","services/contacts-api.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","get","addContact","contact","post","deleteContact","id","delete","getIsLoading","state","contacts","loading","getAllContacts","items","getFilter","filter","getFilteredContacts","createSelector","normFilter","toLowerCase","name","includes","ContactForm","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","find","item","alert","onSubmit","resetForm","this","className","styles","form","labelTitle","type","input","onChange","pattern","title","required","button","Component","connect","dispatch","a","contactsApi","data","filterValue","onFilter","ev","ContactList","contactList","onDeleteContact","isLoadingContacts","list","map","onClick","isLaodingContacts","contactId","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70a117d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2KK43\",\"button\":\"ContactList_button__3a93z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1XhZi\",\"input\":\"Filter_input__3QIZW\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nfunction fetchContacts() {\r\n  return axios.get(\"/contacts\");\r\n}\r\n\r\nfunction addContact(contact) {\r\n  return axios.post(\"/contacts\", contact);\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getIsLoading = (state) => state.contacts.loading;\r\nexport const getAllContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normFilter)\r\n    );\r\n  }\r\n);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\n// export default { getIsLoading, getAllContacts, getFilter, getFilteredContacts };\r\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (!this.state.name || !this.state.number) {\n      alert(\"Enter the name!\");\n      return;\n    }\n\n    if (\n      contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} already exists. Try another name`);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.labelTitle}>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            value={name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={styles.labelTitle}>\n          Phone:\n          <input\n            type=\"text\"\n            name=\"number\"\n            className={styles.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The telephone number must contain numbers and may contain spaces, dashes, parentheses and may start with +\"\n            required\n            value={number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => dispatch(addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\nimport contactsApi from \"../../services/contacts-api\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await contactsApi.fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await contactsApi.addContact(contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await contactsApi.deleteContact(contactId);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ filterValue, onFilter }) => {\n  return (\n    <form className={styles.form}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filterValue}\n          onChange={onFilter}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  filterValue: getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilter: (ev) => dispatch(changeFilter(ev.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchContacts,\n  deleteContact,\n} from \"../../redux/contacts/contacts-operations\";\nimport {\n  getFilteredContacts,\n  getIsLoading,\n} from \"../../redux/contacts/contacts-selectors\";\n\nimport styles from \"./ContactList.module.css\";\n\nclass ContactList extends Component {\n  static propTypes = {\n    contactList: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contactList, onDeleteContact, isLoadingContacts } = this.props;\n    return (\n      <>\n        {isLoadingContacts && <h1>Loading..</h1>}\n        <ul className={styles.list}>\n          {contactList.map(({ id, name, number }) => (\n            <li key={id} className={styles.item}>\n              <p>{name}: </p>\n              <p>{number}</p>\n              <button\n                type=\"button\"\n                className={styles.button}\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLaodingContacts: getIsLoading(state),\n  contactList: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={\"loading\"} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2EkEL\",\"labelTitle\":\"ContactForm_labelTitle__h_CPu\",\"input\":\"ContactForm_input__UViIV\",\"button\":\"ContactForm_button__25_Rc\"};"],"sourceRoot":""}